{"ast":null,"code":"var _jsxFileName = \"/Users/kartheekkodati/Desktop/ecommerce-demo/frontend/src/pages/e-info/OOPS.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ChevronRight, ChevronLeft, Check } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StepByStepOOP = () => {\n  _s();\n  const [currentStep, setCurrentStep] = useState(0);\n  const services = [{\n    id: 1,\n    title: \"User Service\",\n    subtitle: \"Foundation of User Management\",\n    description: \"The User Service is the foundation of our e-commerce system, handling user authentication, registration, and profile management.\",\n    concepts: [{\n      name: \"Encapsulation\",\n      explanation: \"User data (name, email, password) is protected within the User class\",\n      implementation: \"Private fields with getter/setter methods ensure data validation\"\n    }, {\n      name: \"Inheritance\",\n      explanation: \"Admin and Customer classes inherit from the base User class\",\n      implementation: \"Common functionality like authentication is reused and extended\"\n    }, {\n      name: \"Polymorphism\",\n      explanation: \"Different user types can be handled through the same interface\",\n      implementation: \"Admin and Customer have different behaviors but same base structure\"\n    }],\n    code: `class User {\n    private String name;\n    private String email;\n    private String password;\n\n    // Encapsulation: Protected data with controlled access\n    public String getName() { return name; }\n    public void setEmail(String email) {\n        if (email.contains(\"@\")) {\n            this.email = email;\n        }\n    }\n\n    public void login() {\n        // Common login logic\n    }\n}\n\n// Inheritance: Specialized user types\nclass Admin extends User {\n    public void manageUsers() {\n        // Admin-specific functionality\n    }\n}\n\nclass Customer extends User {\n    public void placeOrder(Order order) {\n        // Customer-specific functionality\n    }\n}`,\n    nextStep: \"Now that we have users, we need products for them to interact with...\"\n  }, {\n    id: 2,\n    title: \"Product Service\",\n    subtitle: \"Managing Product Catalog\",\n    description: \"Building on the User Service, the Product Service manages our product catalog with different product types and pricing strategies.\",\n    concepts: [{\n      name: \"Encapsulation\",\n      explanation: \"Product attributes are bundled together with controlled access\",\n      implementation: \"Price, name, description are private with validation in setters\"\n    }, {\n      name: \"Abstraction\",\n      explanation: \"ProductService hides complex database operations behind simple methods\",\n      implementation: \"Methods like addProduct(), updateProduct() abstract away storage details\"\n    }, {\n      name: \"Polymorphism\",\n      explanation: \"Different product types handle discounts differently\",\n      implementation: \"Electronics and Clothing calculate discounts using their own rules\"\n    }],\n    code: `class Product {\n    private String name;\n    private double price;\n    private String description;\n\n    // Encapsulation: Controlled access to price\n    public void setPrice(double price) {\n        if (price > 0) {\n            this.price = price;\n        }\n    }\n    public double getPrice() { return price; }\n}\n\n// Polymorphism: Different discount strategies\nclass Electronics extends Product {\n    public double calculateDiscount() {\n        return getPrice() * 0.10; // 10% off electronics\n    }\n}\n\nclass Clothing extends Product {\n    public double calculateDiscount() {\n        return getPrice() * 0.20; // 20% off clothing\n    }\n}\n\n// Abstraction: Simple interface for complex operations\nclass ProductService {\n    public void addProduct(Product product) {\n        // Hides database complexity\n    }\n}`,\n    nextStep: \"With users and products ready, let's handle order processing...\"\n  }, {\n    id: 3,\n    title: \"Order Service\",\n    subtitle: \"Processing Customer Orders\",\n    description: \"The Order Service connects Users and Products, managing the ordering process with calculated totals and payment processing.\",\n    concepts: [{\n      name: \"Encapsulation\",\n      explanation: \"Order details are protected within the Order class\",\n      implementation: \"Order ID, products list, and customer data are encapsulated\"\n    }, {\n      name: \"Abstraction\",\n      explanation: \"Complex payment and total calculation logic is hidden\",\n      implementation: \"Simple methods like placeOrder() hide payment processing complexity\"\n    }, {\n      name: \"Polymorphism\",\n      explanation: \"Different order types can have specialized behavior\",\n      implementation: \"NormalOrder vs ExpressOrder with different delivery calculations\"\n    }],\n    code: `class Order {\n    private String orderId;\n    private List<Product> products;\n    private Customer customer;\n\n    // Encapsulation: Protected order data\n    public void addProduct(Product product) {\n        products.add(product);\n    }\n\n    // Abstraction: Hides complex calculation logic\n    public void calculateTotal() {\n        double total = 0;\n        for (Product product : products) {\n            total += product.getPrice();\n            total -= product.calculateDiscount(); // Polymorphic call\n        }\n        System.out.println(\"Total: $\" + total);\n    }\n\n    public void processPayment() {\n        // Abstract away payment complexity\n    }\n}\n\n// Polymorphism: Different order types\nclass ExpressOrder extends Order {\n    public double calculateDeliveryFee() {\n        return 15.00; // Express delivery fee\n    }\n}`,\n    nextStep: \"Orders need inventory tracking to ensure product availability...\"\n  }, {\n    id: 4,\n    title: \"Inventory Service\",\n    subtitle: \"Managing Stock Levels\",\n    description: \"The Inventory Service tracks product availability, updating stock levels as orders are processed and managing multiple warehouse locations.\",\n    concepts: [{\n      name: \"Encapsulation\",\n      explanation: \"Stock quantities and warehouse data are protected\",\n      implementation: \"Private maps and controlled access through specific methods\"\n    }, {\n      name: \"Abstraction\",\n      explanation: \"Complex warehouse management is simplified to basic operations\",\n      implementation: \"checkStock() and updateStock() hide database and warehouse logic\"\n    }, {\n      name: \"Polymorphism\",\n      explanation: \"Different warehouse systems can be managed uniformly\",\n      implementation: \"Local and remote warehouses through same interface\"\n    }],\n    code: `class Inventory {\n    private Map<Product, Integer> productStock;\n    private String warehouseLocation;\n\n    // Encapsulation: Protected stock data\n    public boolean checkStock(Product product) {\n        return productStock.getOrDefault(product, 0) > 0;\n    }\n\n    // Abstraction: Simple interface for complex operations\n    public void updateStock(Product product, int quantity) {\n        int currentStock = productStock.getOrDefault(product, 0);\n        productStock.put(product, currentStock + quantity);\n        \n        // Hidden: Update database, notify warehouses, etc.\n    }\n\n    public void reserveStock(Product product, int quantity) {\n        if (checkStock(product)) {\n            updateStock(product, -quantity);\n        }\n    }\n}\n\n// Polymorphism: Different warehouse types\nclass LocalWarehouse extends Inventory {\n    public int getDeliveryTime() { return 1; } // 1 day\n}\n\nclass RemoteWarehouse extends Inventory {\n    public int getDeliveryTime() { return 5; } // 5 days\n}`,\n    nextStep: \"Finally, we need to notify users about their order status...\"\n  }, {\n    id: 5,\n    title: \"Notification Service\",\n    subtitle: \"Customer Communication\",\n    description: \"The Notification Service completes our system by keeping customers informed through multiple channels (email, SMS, push notifications).\",\n    concepts: [{\n      name: \"Encapsulation\",\n      explanation: \"Notification details are bundled within the Notification class\",\n      implementation: \"Recipient, message, and type are protected with controlled access\"\n    }, {\n      name: \"Abstraction\",\n      explanation: \"Complex sending mechanisms are hidden behind simple interfaces\",\n      implementation: \"sendNotification() abstracts email servers, SMS gateways, etc.\"\n    }, {\n      name: \"Inheritance\",\n      explanation: \"Specific notification types extend base Notification class\",\n      implementation: \"EmailNotification, SMSNotification inherit common functionality\"\n    }, {\n      name: \"Polymorphism\",\n      explanation: \"Different notification methods handled through same interface\",\n      implementation: \"Runtime selection of email, SMS, or push notification\"\n    }],\n    code: `// Encapsulation: Protected notification data\nclass Notification {\n    private String recipient;\n    private String message;\n    private String notificationType;\n\n    // Abstraction: Simple send interface\n    public void send() {\n        NotificationSender sender = \n            NotificationSenderFactory.createSender(notificationType);\n        sender.sendNotification(this);\n    }\n}\n\n// Polymorphism: Common interface for all senders\ninterface NotificationSender {\n    void sendNotification(Notification notification);\n}\n\n// Inheritance + Polymorphism: Specific implementations\nclass EmailSender implements NotificationSender {\n    public void sendNotification(Notification notification) {\n        // Abstract away: SMTP connection, authentication, etc.\n        connectToEmailServer();\n        sendEmail(notification.getMessage());\n    }\n}\n\nclass SMSSender implements NotificationSender {\n    public void sendNotification(Notification notification) {\n        // Abstract away: SMS gateway, carrier networks, etc.\n        connectToSMSGateway();\n        sendSMS(notification.getMessage());\n    }\n}\n\n// Factory Pattern: Creates appropriate sender\nclass NotificationSenderFactory {\n    public static NotificationSender createSender(String type) {\n        switch(type) {\n            case \"Email\": return new EmailSender();\n            case \"SMS\": return new SMSSender();\n            default: return new PushNotificationSender();\n        }\n    }\n}`,\n    nextStep: \"Congratulations! You've built a complete e-commerce system using OOP principles!\"\n  }];\n  const nextStep = () => {\n    if (currentStep < services.length - 1) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n  const prevStep = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n  const goToStep = step => {\n    setCurrentStep(step);\n  };\n  const currentService = services[currentStep];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-gray-800 mb-2\",\n          children: \"Step-by-Step E-commerce System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 text-lg\",\n          children: \"Building services one by one using OOP principles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-4\",\n          children: services.map((service, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => goToStep(index),\n              className: `w-10 h-10 rounded-full flex items-center justify-center font-bold transition-all duration-300 ${index <= currentStep ? 'bg-blue-500 text-white shadow-lg' : 'bg-gray-300 text-gray-600'} ${index === currentStep ? 'ring-4 ring-blue-200' : ''}`,\n              children: index < currentStep ? /*#__PURE__*/_jsxDEV(Check, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 42\n              }, this) : index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), index < services.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-16 h-1 mx-2 ${index < currentStep ? 'bg-blue-500' : 'bg-gray-300'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this)]\n          }, service.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: [\"Step \", currentStep + 1, \" of \", services.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-xl shadow-xl overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient-to-r from-blue-600 to-purple-700 text-white p-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-3xl font-bold mb-2\",\n                children: currentService.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-blue-100 text-xl\",\n                children: currentService.subtitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-6xl font-bold opacity-20\",\n              children: currentService.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-4 text-blue-50 text-lg\",\n            children: currentService.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-2xl font-semibold mb-6 text-gray-800\",\n              children: \"OOP Concepts Applied\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\",\n              children: currentService.concepts.map((concept, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 rounded-lg p-6 border-l-4 border-blue-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"text-lg font-semibold text-blue-600 mb-2\",\n                  children: concept.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700 mb-3 text-sm\",\n                  children: concept.explanation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600 text-sm italic\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Implementation:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 23\n                  }, this), \" \", concept.implementation]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-2xl font-semibold mb-4 text-gray-800\",\n              children: \"Code Implementation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-900 rounded-lg p-6 overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"text-green-400 text-sm font-mono whitespace-pre-wrap\",\n                children: currentService.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), currentStep < services.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-50 rounded-lg p-6 border border-blue-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-lg font-semibold text-blue-800 mb-2\",\n              children: \"What's Next?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-blue-700\",\n              children: currentService.nextStep\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this), currentStep === services.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-50 rounded-lg p-6 border border-green-200 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"text-2xl font-semibold text-green-800 mb-4\",\n              children: \"\\uD83C\\uDF89 System Complete!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-green-700 text-lg mb-4\",\n              children: \"You've successfully built a complete e-commerce system using all four OOP principles:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-center space-x-4 text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-green-200 px-3 py-1 rounded\",\n                children: \"Encapsulation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-green-200 px-3 py-1 rounded\",\n                children: \"Inheritance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-green-200 px-3 py-1 rounded\",\n                children: \"Polymorphism\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-green-200 px-3 py-1 rounded\",\n                children: \"Abstraction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 px-8 py-6 flex justify-between items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: prevStep,\n            disabled: currentStep === 0,\n            className: `flex items-center space-x-2 px-6 py-3 rounded-lg font-medium transition-all duration-200 ${currentStep === 0 ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-gray-600 text-white hover:bg-gray-700 shadow-md'}`,\n            children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 font-medium\",\n              children: currentService.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: nextStep,\n            disabled: currentStep === services.length - 1,\n            className: `flex items-center space-x-2 px-6 py-3 rounded-lg font-medium transition-all duration-200 ${currentStep === services.length - 1 ? 'bg-gray-300 text-gray-500 cursor-not-allowed' : 'bg-blue-600 text-white hover:bg-blue-700 shadow-md'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ChevronRight, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 grid grid-cols-1 md:grid-cols-5 gap-4\",\n        children: services.map((service, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => goToStep(index),\n          className: `p-4 rounded-lg border-2 transition-all duration-200 ${index === currentStep ? 'border-blue-500 bg-blue-50 shadow-md' : index < currentStep ? 'border-green-500 bg-green-50' : 'border-gray-300 bg-white hover:border-gray-400'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-8 h-8 rounded-full mx-auto mb-2 flex items-center justify-center text-sm font-bold ${index === currentStep ? 'bg-blue-500 text-white' : index < currentStep ? 'bg-green-500 text-white' : 'bg-gray-300 text-gray-600'}`,\n              children: index < currentStep ? /*#__PURE__*/_jsxDEV(Check, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 42\n              }, this) : index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm font-medium text-gray-800\",\n              children: service.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this)\n        }, service.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n};\n_s(StepByStepOOP, \"1sJm2lQ2mRX7Y0EEARB7TDldOEM=\");\n_c = StepByStepOOP;\nexport default StepByStepOOP;\nvar _c;\n$RefreshReg$(_c, \"StepByStepOOP\");","map":{"version":3,"names":["React","useState","ChevronRight","ChevronLeft","Check","jsxDEV","_jsxDEV","StepByStepOOP","_s","currentStep","setCurrentStep","services","id","title","subtitle","description","concepts","name","explanation","implementation","code","nextStep","length","prevStep","goToStep","step","currentService","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","service","index","onClick","size","concept","disabled","_c","$RefreshReg$"],"sources":["/Users/kartheekkodati/Desktop/ecommerce-demo/frontend/src/pages/e-info/OOPS.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ChevronRight, ChevronLeft, Check } from 'lucide-react';\n\nconst StepByStepOOP = () => {\n  const [currentStep, setCurrentStep] = useState(0);\n\n  const services = [\n    {\n      id: 1,\n      title: \"User Service\",\n      subtitle: \"Foundation of User Management\",\n      description: \"The User Service is the foundation of our e-commerce system, handling user authentication, registration, and profile management.\",\n      concepts: [\n        {\n          name: \"Encapsulation\",\n          explanation: \"User data (name, email, password) is protected within the User class\",\n          implementation: \"Private fields with getter/setter methods ensure data validation\"\n        },\n        {\n          name: \"Inheritance\", \n          explanation: \"Admin and Customer classes inherit from the base User class\",\n          implementation: \"Common functionality like authentication is reused and extended\"\n        },\n        {\n          name: \"Polymorphism\",\n          explanation: \"Different user types can be handled through the same interface\",\n          implementation: \"Admin and Customer have different behaviors but same base structure\"\n        }\n      ],\n      code: `class User {\n    private String name;\n    private String email;\n    private String password;\n\n    // Encapsulation: Protected data with controlled access\n    public String getName() { return name; }\n    public void setEmail(String email) {\n        if (email.contains(\"@\")) {\n            this.email = email;\n        }\n    }\n\n    public void login() {\n        // Common login logic\n    }\n}\n\n// Inheritance: Specialized user types\nclass Admin extends User {\n    public void manageUsers() {\n        // Admin-specific functionality\n    }\n}\n\nclass Customer extends User {\n    public void placeOrder(Order order) {\n        // Customer-specific functionality\n    }\n}`,\n      nextStep: \"Now that we have users, we need products for them to interact with...\"\n    },\n    {\n      id: 2,\n      title: \"Product Service\",\n      subtitle: \"Managing Product Catalog\",\n      description: \"Building on the User Service, the Product Service manages our product catalog with different product types and pricing strategies.\",\n      concepts: [\n        {\n          name: \"Encapsulation\",\n          explanation: \"Product attributes are bundled together with controlled access\",\n          implementation: \"Price, name, description are private with validation in setters\"\n        },\n        {\n          name: \"Abstraction\",\n          explanation: \"ProductService hides complex database operations behind simple methods\",\n          implementation: \"Methods like addProduct(), updateProduct() abstract away storage details\"\n        },\n        {\n          name: \"Polymorphism\",\n          explanation: \"Different product types handle discounts differently\",\n          implementation: \"Electronics and Clothing calculate discounts using their own rules\"\n        }\n      ],\n      code: `class Product {\n    private String name;\n    private double price;\n    private String description;\n\n    // Encapsulation: Controlled access to price\n    public void setPrice(double price) {\n        if (price > 0) {\n            this.price = price;\n        }\n    }\n    public double getPrice() { return price; }\n}\n\n// Polymorphism: Different discount strategies\nclass Electronics extends Product {\n    public double calculateDiscount() {\n        return getPrice() * 0.10; // 10% off electronics\n    }\n}\n\nclass Clothing extends Product {\n    public double calculateDiscount() {\n        return getPrice() * 0.20; // 20% off clothing\n    }\n}\n\n// Abstraction: Simple interface for complex operations\nclass ProductService {\n    public void addProduct(Product product) {\n        // Hides database complexity\n    }\n}`,\n      nextStep: \"With users and products ready, let's handle order processing...\"\n    },\n    {\n      id: 3,\n      title: \"Order Service\",\n      subtitle: \"Processing Customer Orders\",\n      description: \"The Order Service connects Users and Products, managing the ordering process with calculated totals and payment processing.\",\n      concepts: [\n        {\n          name: \"Encapsulation\",\n          explanation: \"Order details are protected within the Order class\",\n          implementation: \"Order ID, products list, and customer data are encapsulated\"\n        },\n        {\n          name: \"Abstraction\",\n          explanation: \"Complex payment and total calculation logic is hidden\",\n          implementation: \"Simple methods like placeOrder() hide payment processing complexity\"\n        },\n        {\n          name: \"Polymorphism\",\n          explanation: \"Different order types can have specialized behavior\",\n          implementation: \"NormalOrder vs ExpressOrder with different delivery calculations\"\n        }\n      ],\n      code: `class Order {\n    private String orderId;\n    private List<Product> products;\n    private Customer customer;\n\n    // Encapsulation: Protected order data\n    public void addProduct(Product product) {\n        products.add(product);\n    }\n\n    // Abstraction: Hides complex calculation logic\n    public void calculateTotal() {\n        double total = 0;\n        for (Product product : products) {\n            total += product.getPrice();\n            total -= product.calculateDiscount(); // Polymorphic call\n        }\n        System.out.println(\"Total: $\" + total);\n    }\n\n    public void processPayment() {\n        // Abstract away payment complexity\n    }\n}\n\n// Polymorphism: Different order types\nclass ExpressOrder extends Order {\n    public double calculateDeliveryFee() {\n        return 15.00; // Express delivery fee\n    }\n}`,\n      nextStep: \"Orders need inventory tracking to ensure product availability...\"\n    },\n    {\n      id: 4,\n      title: \"Inventory Service\",\n      subtitle: \"Managing Stock Levels\",\n      description: \"The Inventory Service tracks product availability, updating stock levels as orders are processed and managing multiple warehouse locations.\",\n      concepts: [\n        {\n          name: \"Encapsulation\",\n          explanation: \"Stock quantities and warehouse data are protected\",\n          implementation: \"Private maps and controlled access through specific methods\"\n        },\n        {\n          name: \"Abstraction\",\n          explanation: \"Complex warehouse management is simplified to basic operations\",\n          implementation: \"checkStock() and updateStock() hide database and warehouse logic\"\n        },\n        {\n          name: \"Polymorphism\",\n          explanation: \"Different warehouse systems can be managed uniformly\",\n          implementation: \"Local and remote warehouses through same interface\"\n        }\n      ],\n      code: `class Inventory {\n    private Map<Product, Integer> productStock;\n    private String warehouseLocation;\n\n    // Encapsulation: Protected stock data\n    public boolean checkStock(Product product) {\n        return productStock.getOrDefault(product, 0) > 0;\n    }\n\n    // Abstraction: Simple interface for complex operations\n    public void updateStock(Product product, int quantity) {\n        int currentStock = productStock.getOrDefault(product, 0);\n        productStock.put(product, currentStock + quantity);\n        \n        // Hidden: Update database, notify warehouses, etc.\n    }\n\n    public void reserveStock(Product product, int quantity) {\n        if (checkStock(product)) {\n            updateStock(product, -quantity);\n        }\n    }\n}\n\n// Polymorphism: Different warehouse types\nclass LocalWarehouse extends Inventory {\n    public int getDeliveryTime() { return 1; } // 1 day\n}\n\nclass RemoteWarehouse extends Inventory {\n    public int getDeliveryTime() { return 5; } // 5 days\n}`,\n      nextStep: \"Finally, we need to notify users about their order status...\"\n    },\n    {\n      id: 5,\n      title: \"Notification Service\",\n      subtitle: \"Customer Communication\",\n      description: \"The Notification Service completes our system by keeping customers informed through multiple channels (email, SMS, push notifications).\",\n      concepts: [\n        {\n          name: \"Encapsulation\",\n          explanation: \"Notification details are bundled within the Notification class\",\n          implementation: \"Recipient, message, and type are protected with controlled access\"\n        },\n        {\n          name: \"Abstraction\",\n          explanation: \"Complex sending mechanisms are hidden behind simple interfaces\",\n          implementation: \"sendNotification() abstracts email servers, SMS gateways, etc.\"\n        },\n        {\n          name: \"Inheritance\",\n          explanation: \"Specific notification types extend base Notification class\",\n          implementation: \"EmailNotification, SMSNotification inherit common functionality\"\n        },\n        {\n          name: \"Polymorphism\",\n          explanation: \"Different notification methods handled through same interface\",\n          implementation: \"Runtime selection of email, SMS, or push notification\"\n        }\n      ],\n      code: `// Encapsulation: Protected notification data\nclass Notification {\n    private String recipient;\n    private String message;\n    private String notificationType;\n\n    // Abstraction: Simple send interface\n    public void send() {\n        NotificationSender sender = \n            NotificationSenderFactory.createSender(notificationType);\n        sender.sendNotification(this);\n    }\n}\n\n// Polymorphism: Common interface for all senders\ninterface NotificationSender {\n    void sendNotification(Notification notification);\n}\n\n// Inheritance + Polymorphism: Specific implementations\nclass EmailSender implements NotificationSender {\n    public void sendNotification(Notification notification) {\n        // Abstract away: SMTP connection, authentication, etc.\n        connectToEmailServer();\n        sendEmail(notification.getMessage());\n    }\n}\n\nclass SMSSender implements NotificationSender {\n    public void sendNotification(Notification notification) {\n        // Abstract away: SMS gateway, carrier networks, etc.\n        connectToSMSGateway();\n        sendSMS(notification.getMessage());\n    }\n}\n\n// Factory Pattern: Creates appropriate sender\nclass NotificationSenderFactory {\n    public static NotificationSender createSender(String type) {\n        switch(type) {\n            case \"Email\": return new EmailSender();\n            case \"SMS\": return new SMSSender();\n            default: return new PushNotificationSender();\n        }\n    }\n}`,\n      nextStep: \"Congratulations! You've built a complete e-commerce system using OOP principles!\"\n    }\n  ];\n\n  const nextStep = () => {\n    if (currentStep < services.length - 1) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const goToStep = (step) => {\n    setCurrentStep(step);\n  };\n\n  const currentService = services[currentStep];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n      <div className=\"max-w-6xl mx-auto px-4\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold text-gray-800 mb-2\">\n            Step-by-Step E-commerce System\n          </h1>\n          <p className=\"text-gray-600 text-lg\">\n            Building services one by one using OOP principles\n          </p>\n        </div>\n\n        {/* Progress Bar */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            {services.map((service, index) => (\n              <div key={service.id} className=\"flex items-center\">\n                <button\n                  onClick={() => goToStep(index)}\n                  className={`w-10 h-10 rounded-full flex items-center justify-center font-bold transition-all duration-300 ${\n                    index <= currentStep\n                      ? 'bg-blue-500 text-white shadow-lg'\n                      : 'bg-gray-300 text-gray-600'\n                  } ${index === currentStep ? 'ring-4 ring-blue-200' : ''}`}\n                >\n                  {index < currentStep ? <Check size={20} /> : index + 1}\n                </button>\n                {index < services.length - 1 && (\n                  <div className={`w-16 h-1 mx-2 ${\n                    index < currentStep ? 'bg-blue-500' : 'bg-gray-300'\n                  }`} />\n                )}\n              </div>\n            ))}\n          </div>\n          <div className=\"text-center\">\n            <span className=\"text-sm text-gray-600\">\n              Step {currentStep + 1} of {services.length}\n            </span>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"bg-white rounded-xl shadow-xl overflow-hidden\">\n          {/* Service Header */}\n          <div className=\"bg-gradient-to-r from-blue-600 to-purple-700 text-white p-8\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h2 className=\"text-3xl font-bold mb-2\">{currentService.title}</h2>\n                <p className=\"text-blue-100 text-xl\">{currentService.subtitle}</p>\n              </div>\n              <div className=\"text-6xl font-bold opacity-20\">\n                {currentService.id}\n              </div>\n            </div>\n            <p className=\"mt-4 text-blue-50 text-lg\">\n              {currentService.description}\n            </p>\n          </div>\n\n          {/* Content */}\n          <div className=\"p-8\">\n            {/* OOP Concepts Used */}\n            <div className=\"mb-8\">\n              <h3 className=\"text-2xl font-semibold mb-6 text-gray-800\">\n                OOP Concepts Applied\n              </h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {currentService.concepts.map((concept, index) => (\n                  <div key={index} className=\"bg-gray-50 rounded-lg p-6 border-l-4 border-blue-500\">\n                    <h4 className=\"text-lg font-semibold text-blue-600 mb-2\">\n                      {concept.name}\n                    </h4>\n                    <p className=\"text-gray-700 mb-3 text-sm\">\n                      {concept.explanation}\n                    </p>\n                    <p className=\"text-gray-600 text-sm italic\">\n                      <strong>Implementation:</strong> {concept.implementation}\n                    </p>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Code Example */}\n            <div className=\"mb-8\">\n              <h3 className=\"text-2xl font-semibold mb-4 text-gray-800\">\n                Code Implementation\n              </h3>\n              <div className=\"bg-gray-900 rounded-lg p-6 overflow-x-auto\">\n                <pre className=\"text-green-400 text-sm font-mono whitespace-pre-wrap\">\n                  {currentService.code}\n                </pre>\n              </div>\n            </div>\n\n            {/* Next Step Preview */}\n            {currentStep < services.length - 1 && (\n              <div className=\"bg-blue-50 rounded-lg p-6 border border-blue-200\">\n                <h4 className=\"text-lg font-semibold text-blue-800 mb-2\">\n                  What's Next?\n                </h4>\n                <p className=\"text-blue-700\">\n                  {currentService.nextStep}\n                </p>\n              </div>\n            )}\n\n            {/* Completion Message */}\n            {currentStep === services.length - 1 && (\n              <div className=\"bg-green-50 rounded-lg p-6 border border-green-200 text-center\">\n                <h4 className=\"text-2xl font-semibold text-green-800 mb-4\">\n                  🎉 System Complete!\n                </h4>\n                <p className=\"text-green-700 text-lg mb-4\">\n                  You've successfully built a complete e-commerce system using all four OOP principles:\n                </p>\n                <div className=\"flex justify-center space-x-4 text-sm\">\n                  <span className=\"bg-green-200 px-3 py-1 rounded\">Encapsulation</span>\n                  <span className=\"bg-green-200 px-3 py-1 rounded\">Inheritance</span>\n                  <span className=\"bg-green-200 px-3 py-1 rounded\">Polymorphism</span>\n                  <span className=\"bg-green-200 px-3 py-1 rounded\">Abstraction</span>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Navigation */}\n          <div className=\"bg-gray-50 px-8 py-6 flex justify-between items-center\">\n            <button\n              onClick={prevStep}\n              disabled={currentStep === 0}\n              className={`flex items-center space-x-2 px-6 py-3 rounded-lg font-medium transition-all duration-200 ${\n                currentStep === 0\n                  ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                  : 'bg-gray-600 text-white hover:bg-gray-700 shadow-md'\n              }`}\n            >\n              <ChevronLeft size={20} />\n              <span>Previous</span>\n            </button>\n\n            <div className=\"text-center\">\n              <p className=\"text-gray-600 font-medium\">\n                {currentService.title}\n              </p>\n            </div>\n\n            <button\n              onClick={nextStep}\n              disabled={currentStep === services.length - 1}\n              className={`flex items-center space-x-2 px-6 py-3 rounded-lg font-medium transition-all duration-200 ${\n                currentStep === services.length - 1\n                  ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                  : 'bg-blue-600 text-white hover:bg-blue-700 shadow-md'\n              }`}\n            >\n              <span>Next</span>\n              <ChevronRight size={20} />\n            </button>\n          </div>\n        </div>\n\n        {/* Service Overview */}\n        <div className=\"mt-8 grid grid-cols-1 md:grid-cols-5 gap-4\">\n          {services.map((service, index) => (\n            <button\n              key={service.id}\n              onClick={() => goToStep(index)}\n              className={`p-4 rounded-lg border-2 transition-all duration-200 ${\n                index === currentStep\n                  ? 'border-blue-500 bg-blue-50 shadow-md'\n                  : index < currentStep\n                  ? 'border-green-500 bg-green-50'\n                  : 'border-gray-300 bg-white hover:border-gray-400'\n              }`}\n            >\n              <div className=\"text-center\">\n                <div className={`w-8 h-8 rounded-full mx-auto mb-2 flex items-center justify-center text-sm font-bold ${\n                  index === currentStep\n                    ? 'bg-blue-500 text-white'\n                    : index < currentStep\n                    ? 'bg-green-500 text-white'\n                    : 'bg-gray-300 text-gray-600'\n                }`}>\n                  {index < currentStep ? <Check size={16} /> : index + 1}\n                </div>\n                <p className=\"text-sm font-medium text-gray-800\">\n                  {service.title}\n                </p>\n              </div>\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StepByStepOOP;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,EAAEC,WAAW,EAAEC,KAAK,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMU,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,cAAc;IACrBC,QAAQ,EAAE,+BAA+B;IACzCC,WAAW,EAAE,kIAAkI;IAC/IC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,eAAe;MACrBC,WAAW,EAAE,sEAAsE;MACnFC,cAAc,EAAE;IAClB,CAAC,EACD;MACEF,IAAI,EAAE,aAAa;MACnBC,WAAW,EAAE,6DAA6D;MAC1EC,cAAc,EAAE;IAClB,CAAC,EACD;MACEF,IAAI,EAAE,cAAc;MACpBC,WAAW,EAAE,gEAAgE;MAC7EC,cAAc,EAAE;IAClB,CAAC,CACF;IACDC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACIC,QAAQ,EAAE;EACZ,CAAC,EACD;IACET,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,iBAAiB;IACxBC,QAAQ,EAAE,0BAA0B;IACpCC,WAAW,EAAE,oIAAoI;IACjJC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,eAAe;MACrBC,WAAW,EAAE,gEAAgE;MAC7EC,cAAc,EAAE;IAClB,CAAC,EACD;MACEF,IAAI,EAAE,aAAa;MACnBC,WAAW,EAAE,wEAAwE;MACrFC,cAAc,EAAE;IAClB,CAAC,EACD;MACEF,IAAI,EAAE,cAAc;MACpBC,WAAW,EAAE,sDAAsD;MACnEC,cAAc,EAAE;IAClB,CAAC,CACF;IACDC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACIC,QAAQ,EAAE;EACZ,CAAC,EACD;IACET,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,eAAe;IACtBC,QAAQ,EAAE,4BAA4B;IACtCC,WAAW,EAAE,6HAA6H;IAC1IC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,eAAe;MACrBC,WAAW,EAAE,oDAAoD;MACjEC,cAAc,EAAE;IAClB,CAAC,EACD;MACEF,IAAI,EAAE,aAAa;MACnBC,WAAW,EAAE,uDAAuD;MACpEC,cAAc,EAAE;IAClB,CAAC,EACD;MACEF,IAAI,EAAE,cAAc;MACpBC,WAAW,EAAE,qDAAqD;MAClEC,cAAc,EAAE;IAClB,CAAC,CACF;IACDC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;IACIC,QAAQ,EAAE;EACZ,CAAC,EACD;IACET,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,mBAAmB;IAC1BC,QAAQ,EAAE,uBAAuB;IACjCC,WAAW,EAAE,6IAA6I;IAC1JC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,eAAe;MACrBC,WAAW,EAAE,mDAAmD;MAChEC,cAAc,EAAE;IAClB,CAAC,EACD;MACEF,IAAI,EAAE,aAAa;MACnBC,WAAW,EAAE,gEAAgE;MAC7EC,cAAc,EAAE;IAClB,CAAC,EACD;MACEF,IAAI,EAAE,cAAc;MACpBC,WAAW,EAAE,sDAAsD;MACnEC,cAAc,EAAE;IAClB,CAAC,CACF;IACDC,IAAI,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}