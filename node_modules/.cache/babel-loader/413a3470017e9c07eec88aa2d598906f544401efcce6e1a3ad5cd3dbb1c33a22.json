{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\n\n// Product Service API - Use API Gateway instead of direct service\nconst PRODUCT_SERVICE_URL = `${API_BASE_URL}/products`;\nexport const getProducts = async () => {\n  try {\n    const response = await axios.get(PRODUCT_SERVICE_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n};\nexport const getProductById = async productId => {\n  try {\n    const response = await axios.get(`${PRODUCT_SERVICE_URL}/${productId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching product with ID ${productId}:`, error);\n    throw error;\n  }\n};\n\n// Order Service API - Use API Gateway instead of direct service\nconst ORDER_SERVICE_URL = `${API_BASE_URL}/orders`;\nexport const createOrder = async orderData => {\n  try {\n    const response = await axios.post(ORDER_SERVICE_URL, orderData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error);\n    throw error;\n  }\n};\nexport const getOrderById = async orderId => {\n  try {\n    const response = await axios.get(`${ORDER_SERVICE_URL}/${orderId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching order with ID ${orderId}:`, error);\n    throw error;\n  }\n};\nexport const getOrdersByUserId = async userId => {\n  try {\n    const response = await axios.get(`${ORDER_SERVICE_URL}/user/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching orders for user ${userId}:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","PRODUCT_SERVICE_URL","getProducts","response","get","data","error","console","getProductById","productId","ORDER_SERVICE_URL","createOrder","orderData","post","getOrderById","orderId","getOrdersByUserId","userId"],"sources":["/Users/kartheekkodati/Desktop/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080/api';\n\n// Product Service API - Use API Gateway instead of direct service\nconst PRODUCT_SERVICE_URL = `${API_BASE_URL}/products`;\n\nexport const getProducts = async () => {\n  try {\n    const response = await axios.get(PRODUCT_SERVICE_URL);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n};\n\nexport const getProductById = async (productId) => {\n  try {\n    const response = await axios.get(`${PRODUCT_SERVICE_URL}/${productId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching product with ID ${productId}:`, error);\n    throw error;\n  }\n};\n\n// Order Service API - Use API Gateway instead of direct service\nconst ORDER_SERVICE_URL = `${API_BASE_URL}/orders`;\n\nexport const createOrder = async (orderData) => {\n  try {\n    const response = await axios.post(ORDER_SERVICE_URL, orderData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating order:', error);\n    throw error;\n  }\n};\n\nexport const getOrderById = async (orderId) => {\n  try {\n    const response = await axios.get(`${ORDER_SERVICE_URL}/${orderId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching order with ID ${orderId}:`, error);\n    throw error;\n  }\n};\n\nexport const getOrdersByUserId = async (userId) => {\n  try {\n    const response = await axios.get(`${ORDER_SERVICE_URL}/user/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching orders for user ${userId}:`, error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,mBAAmB,GAAG,GAAGD,YAAY,WAAW;AAEtD,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACH,mBAAmB,CAAC;IACrD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAOC,SAAS,IAAK;EACjD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGH,mBAAmB,IAAIQ,SAAS,EAAE,CAAC;IACvE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkCG,SAAS,GAAG,EAAEH,KAAK,CAAC;IACpE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,MAAMI,iBAAiB,GAAG,GAAGV,YAAY,SAAS;AAElD,OAAO,MAAMW,WAAW,GAAG,MAAOC,SAAS,IAAK;EAC9C,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMJ,KAAK,CAACc,IAAI,CAACH,iBAAiB,EAAEE,SAAS,CAAC;IAC/D,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAG,MAAOC,OAAO,IAAK;EAC7C,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGM,iBAAiB,IAAIK,OAAO,EAAE,CAAC;IACnE,OAAOZ,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gCAAgCS,OAAO,GAAG,EAAET,KAAK,CAAC;IAChE,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMU,iBAAiB,GAAG,MAAOC,MAAM,IAAK;EACjD,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,GAAGM,iBAAiB,SAASO,MAAM,EAAE,CAAC;IACvE,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkCW,MAAM,GAAG,EAAEX,KAAK,CAAC;IACjE,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}